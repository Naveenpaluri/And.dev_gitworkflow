name: Build APKs

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: ubuntu:latest
      options: --user root

    steps:
      - name: Update and Install Packages
        run: |
         apt-get update
         apt-get install -y wget unzip curl git xz-utils jq

    
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Download and install Android SDK Command Line Tools
        run: |
          mkdir /opt/android-sdk
          cd /opt/android-sdk
          wget https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
          unzip commandlinetools-linux-10406996_latest.zip
          cd cmdline-tools/
          mkdir latest
          mv bin/ lib/ NOTICE.txt source.properties latest/
          chmod +x latest/bin/sdkmanager  # Make sure sdkmanager is executable
          echo "ANDROID_HOME=/opt/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=/opt/android-sdk" >> $GITHUB_ENV
          echo "PATH=\$PATH:/opt/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_ENV
          yes | ./latest/bin/sdkmanager --licenses
          yes | ./latest/bin/sdkmanager "platform-tools" "build-tools;30.0.3"


      - name: Download and install Flutter SDK
        uses: mobiledevops/flutter-sdk-action@v1.0.0
        with:
          # 11
          flutter-version: "3.7.7"
          channel: 'stable'
      - run: git config --global --add safe.directory /opt/hostedtoolcache/flutter/stable-3.7.7-x64
      - run: flutter --version
      - run: flutter doctor


      - name: Display Environment Variables
        run: |
          echo "JAVA_HOME: $JAVA_HOME"
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          echo "PATH: $PATH"

      - name: Display Java Version
        run: java -version

      - name: Display Flutter Version
        run: flutter --version
          
  
      - name: Build APK
        working-directory: ./android
        run: |
          flutter build apk 
     
      - name: Build and Sign APK
        working-directory: ./android
        run: |
          flutter build apk --release
          jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore "${{ secrets.KEYSTORE_FILE }}" -storepass "${{ secrets.KEYSTORE_PASSWORD }}" -keypass "${{ secrets.KEY_PASSWORD }}" "build/app/outputs/flutter-apk/app-release.apk" "${{ secrets.KEY_ALIAS }}"

      - name: Archive APK
        uses: actions/upload-artifact@v2
        with:
          name: app-release-signed
          path: ./android/app-release-signed.apk
